import { MyContext } from "../services/bot.service";
import { CheckAccess } from "../../api";
import { InlineKeyboard } from "grammy";

export function accessCheckMiddleware(accessToken: string) {
	return async function (ctx: MyContext, next: any) {
		const cmd = ctx.update.message?.text?.toLowerCase();
		const callbackMsg = ctx.update.callback_query?.data?.toLowerCase();
		const context = new CheckAccess(accessToken);
		if (cmd != "/start" && cmd != "/auth" && callbackMsg != "help" && callbackMsg != "menu" && callbackMsg != "about" && callbackMsg != "start" && callbackMsg != "auth") {
			const res = await context.default();
			if (res.response.statusCode == 401) {
				await ctx.editMessageText("‚ö†Ô∏è –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω! –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /auth", {
					reply_markup: new InlineKeyboard().text("–ù–∞–∑–∞–¥", "start").text("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è", "auth").row(),
				});
			} else if (res.response.statusCode == 500) {
				await ctx.editMessageText("üòî –ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ —Å–µ—Ä–≤–µ—Ä–∞ Dnevnik.ru —Å–µ–π—á–∞—Å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ —Ç–µ—Ö. –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è (15 –º–∏–Ω)", {
					reply_markup: new InlineKeyboard().text("–ù–∞–∑–∞–¥", "start"),
				});
			} else return await next();
		} else return await next();
	};
}
