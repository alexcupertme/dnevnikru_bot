export type TSchool = {
	fullName: string;
	avatarSmall: string;
	city: string;
	municipality: string;
	regionid: number;
	markType: string;
	timeZone: number;
	uses_avg: boolean;
	uses_weighted_avg: boolean;
	id: number;
	id_str: string;
	name: string;
	educationType: string;
	tsoCityId: number;
	tsoRegionTreePath: string;
};

export type TPersonSchool = {
	id: number;
	id_str: string;
	name: string;
	educationType: string;
	tsoCityId: number;
	tsoRegionTreePath: string;
};

export type TIncludedCity = {
	id: number;
	id_str: string;
	name: string;
	regionId: number;
	regionId_str: string;
};

export type TSchoolUser = {
	id: number;
	id_str: string;
	userId: number;
	userId_str: string;
	firstName: string;
	lastName: string;
	middleName: string;
	shortName: string;
	sex: string;
};

export type TSchoolParameters = {
	schoolId: number;
	schoolId_str: string;
	municipality: string;
	fullName: string;
	shortName: string;
	status: string;
	foundationYear: number;
	hasspecialty: boolean;
	specialty: string;
	address: string[];
	website: string;
	email: string;
	schoolPhone: string;
	schoolDaysCount: number;
	workHours: string;
	shiftsCount: number;
	eduOrgForm: string;
	directorFullName: string;
	directorPhone: string;
	directorQualification: string;
	directorPhoto: string;
	licence: string;
	accreditation: string;
	charter: string;
	cooperationName: string;
	cooperationWebsite: string;
	prescriptions: string;
	activeJournalUrl: string;
	inn: string;
	facadePhoto: string;
	cantinaPhoto: string;
	gymPhoto: string;
	classroomPhoto: string;
	physicsroomPhoto: string;
	chemicsryroomPhoto: string;
	biologyroomPhoto: string;
	mathroomPhoto: string;
	russianroomPhoto: string;
	musicroomPhoto: string;
	educationalLevels: string[];
	generalEducationalProgrammsLicense: string;
	furtherEducationalProgramsLicense: string;
	primarySchoolEducationalPrograms: string[];
	hasAdaptedEducationalPrograms: boolean;
	hasOwnEducationalPrograms: boolean;
	ownEducationalPrograms: string;
	hasDistEduTech: boolean;
	teachingForeignLanguages: string[];
	studyPlan: string;
	actualOccupancy: number;
	designCapacity: number;
	enrollmentIsOpen: boolean;
	vacantPlacesCount: number;
	disabledChildrenCount: number;
	firstStageGroupsCount: number;
	secondStageGroupsCount: number;
	thirdStageGroupsCount: number;
	firstStageStudentsCount: number;
	secondStageStudentsCount: number;
	thirdStageStudentsCount: number;
	teachersCount: number;
	teachersWithHigherEducationCount: number;
	highest–°ategoryTeachersCount: number;
	publications: string;
	laureatesOfContestsCount: string;
	laureatesOfContestsInfo: string;
	hasEducationalPsychologists: boolean;
	hasDefectologists: boolean;
	hasSpeechTherapists: boolean;
	hasSocialWorkers: boolean;
	hasMedicalWorkers: boolean;
	studentsPerComputer: number;
	hasCompensatingClasses: boolean;
	hasBarrierFreeEnvironment: boolean;
	hasSwimmingPool: boolean;
	hasMedicalOffice: boolean;
	hasDiningRoom: boolean;
	hasGym: boolean;
	gymCount: number;
	hasAssemblyHall: boolean;
	hasWinterGarden: boolean;
	hasCctv: boolean;
	hasGpd: boolean;
	schoolSiteArea: number;
	hasEstheticZone: boolean;
	trainingExperimentalPlotArea: number;
	hasSportArea: boolean;
	hasRecreationArea: boolean;
	hasZonesForTrainingInPreventionOfChildRoadTrafficInjuries: boolean;
	hasAreasOfEconomicPurpose: boolean;
	hobbyGroups: {
		schoolId: number;
		schoolId_str: string;
		hobbyGroupName: string;
		hobbyGroupDescription: string;
		hobbyGroupSchedule: string;
		hobbyGroupPayment: boolean;
		hobbyGroupEnrollment: string;
	}[];
	learningResults: {
		schoolId: number;
		schoolId_str: string;
		studyYear: number;
		prizesAtAllRussiaOlympiadPercentage: number;
		basicCertificatesReceivedPercentage: number;
		certificatesReceivedPercentage: number;
		egeMathBaseLevelAverageScore: number;
		egeMathProfileLevelAverageScore: number;
		egeRussianAverageScore: number;
		giaMathPassedPercentage: number;
		giaMathPassedPerfectlyPercentage: number;
		giaRussianPassedPercentage: number;
		giaRussianPassedPerfectlyPercentage: number;
		medalistsCount: number;
		medalistsPercentage: number;
		enrolledPercentage: number;
		rankedInTheTop100: boolean;
	}[];
};
